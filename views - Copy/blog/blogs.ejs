<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- Include stylesheet -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
</head>

<body>
    <h1>For main page blog summary details form</h1>
    <h1>For detail blog page form</h1>

    <form action="/add-blog" method="POST" id="FormId">
        <div class="mb-3">
            <label for="srNo" class="form-label">SrNo</label>
            <input type="number" name="srNo" class="form-control" placeholder="Serial Number" id="srNo">
        </div>
        <div class="mb-3">
            <label for="image" class="form-label">Blog Image Link</label>
            <input type="file" name="image" placeholder=" Blog Image Link" class="form-control" id="image">
        </div>
        <div class="mb-3">
            <label for="title" class="form-label">Blog Title</label>
            <input type="text" name="title" placeholder="title of the blog" class="form-control" id="title">
        </div>
        <div class="mb-3">
            <label for="introLink" class="form-label">Blog Introduction File Name</label>
            <input type="text" name="introLink" placeholder="Blog Introduction File Name" class="form-control"
                id="text">
        </div>
        <div class="mb-3">
            <label for="detailLink" class="form-label">Blog Detail File Name</label>
            <input type="text" name="detailLink" placeholder="Blog Detail File Name" class="form-control" id="url">
        </div>
        <div class="mb-3">
            <label for="introduction" class="form-label">Blog Introduction</label>
            <textarea class="form-control is-invalid" id="validationTextarea" name="introduction"
                placeholder="Write your blog Introduction" required></textarea>
        </div>



        <div class="row form-group">
            <label for="content" class="form-label">Blog Detail</label>
            <label for="about">About me</label>
            <input name="content" type="hidden">
            <div id="editor-container">
                <p>This quill.js editor woking to be done final. its work is pending. Need to be done like blogger blog editor. hard work is required. I will do it in the end after publishing the website. till that blogger blog link I will use. best of luck to me.</p>
            </div>
        </div>
        <div class="row">
            <button class="btn btn-primary" type="submit">Submit</button>
        </div>
    </form>

    <!-- Include the Quill library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.js"
        integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>

    <!-- Initialize Quill editor -->
    <script>
        var toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
            ['blockquote', 'code-block'],
            [{ 'header': 1 }, { 'header': 2 }],               // custom button values
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction
            [{ 'handlers': { image: this.imageHandler }, }]
            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
            ['link', 'image', 'video', 'formula'],
            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
            [{ 'font': [] }],
            [{ 'align': [] }],
            ['clean']                                         // remove formatting button
        ];

        var options = {
            bounds: '#editor-container',
            debug: 'info',
            modules: {
                toolbar: this.toolbarOptions
            },
            placeholder: 'Compose an epic...',
            readOnly: false,
            theme: 'snow'
        };

        var editor = new Quill('#editor-container', options);

        var form = document.getElementById("FormId"); // get form by ID

        form.onsubmit = function () { // onsubmit do this first
            var name = document.querySelector('input[name=content]'); // set name input var
            // name.value = JSON.stringify(editor.getContents()); // populate name input with quill data
            name.value = editor.root.innerHTML;
            return true; // submit form
        }

        // Step1. select local image
        function selectLocalImage() {
            const input = document.createElement('input');
            input.setAttribute('type', 'file');

            input.click();
            console.log("From SelectLocalImage");
            // Listen upload local image and save to server
            input.onchange = () => {

                const file = input.files[0];
                console.log(`file: ${file}`);
                // file type is only image.
                if (/^image\//.test(file.type)) {
                    saveToServer(file);
                } else {
                    console.warn('You could only upload images.');
                }
            };
        }

        // Step2. save to server @param {File} file
        function saveToServer(file) {
            const fd = new FormData();
            fd.append('image', file);
            url = "image1/thumbnail1.jpg";

            const xhr = new XMLHttpRequest();
            xhr.open('POST', url, true);
            xhr.onload = () => {
                if (xhr.status === 200) {
                    const url = xhr.responseURL;
                    console.log(`image url is: ${url}`);
                    insertToEditor(url);
                }
            };
            xhr.send(fd);
        }

        // Step3. insert image url to rich editor. @param {string} url
        function insertToEditor(url) {
            // push image url to rich editor.
            const range = editor.getSelection();
            editor.insertEmbed(range.index, 'image', url);
        }

        // quill editor add image handler
        editor.getModule('toolbar').addHandler('image', () => {
            selectLocalImage();
        });
    </script>

    <h1>For main page blog summary details Table</h1>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">Sr No</th>
                <th scope="col">Image Link</th>
                <th scope="col">Title </th>
                <th scope="col">Intro</th>
                <th scope="col">Content</th>
                <th scope="col">Date Published</th>
            </tr>
        </thead>
        <tbody>
            {% for data in datas %}
            <tr>
                <td>{{ data.srNo }}</td>
                <td>{{ data.image }}</td>
                <td>{{ data.title }}</td>
                <td>{{ data.introLink }}</td>
                <td>{{ data.detailLink }}</td>
                <td>{{ data.createdAt }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>

</html>